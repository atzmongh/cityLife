
@{
    //_Page_Views_Admin_unitTests_cshtml/unitTest view
    ViewBag.Title = "unitTests";
    Layout = "~/Views/sharing/_adminLayout.cshtml";
    //ViewBag.unitTestBySeries contains list of series. Each series is a igrouping<string,UnitTest>
    // ViewBag.skipCorrectTests = skipCorrectTests;
}
<script>
    //The function creates an ajax call to the server to update the test result
    function updateTestResult(theCheckBox) {
        var result = {};
        result.checkBoxName = theCheckBox.name;
        result.checkBoxValue = theCheckBox.value;
        $.post("/admin/unitTestsResult", result);

    }
</script>
<h2>Unit Tests</h2><br />
<form action="/admin/unitTests" method="get">
    <input type="submit" name="theAction" value="run Tests" />
    <input type="submit" name="theAction" value="show Tests" />
    <input type="checkbox" name="skipCorrectTests" value="TRUE" checked />Skip correct tests
</form>
@{
    if (ViewBag.testTime != null)
    {
        <p><b>"test cycle run at:" @ViewBag.testTime</b></p>
    }
    if (ViewBag.unitTestsBySeries == null)
    {
        return;
    }
    bool skipCorrectTests = ViewBag.skipCorrectTests;

    foreach (IGrouping<string, unitTest> aSeries in ViewBag.unitTestsBySeries)
    {
        //open new table and the header line
        <span><b>Test series: @aSeries.Key</b></span>
        @Html.Raw("<table class='table'>");
        <thead>
            <tr>
                <th>number</th>
                <th>expected result</th>
                <th>actual results</th>
                <th>correct</th>
                <th>incorrect</th>
            </tr>
        </thead>
        @Html.Raw("<body>");

        int correctTests = aSeries.Count(aRecord => aRecord.correctFlag == true);
        int falseTests = aSeries.Count(aRecord => aRecord.correctFlag == false);
        int unknownTests = aSeries.Count(aRecord => aRecord.correctFlag == null);
        foreach (var aUnitTest in aSeries)
        {
            //Create one line for a single test
            if (aUnitTest.correctFlag == true && skipCorrectTests)
            {
                //skip this line, as it is a correct line
            }
            else
            {
                <tr>
                    <td>@aUnitTest.number</td>
                    <td>@aUnitTest.expectedResult</td>
                    <td>@aUnitTest.actualResult</td>
                    @{
                    string correctChecked = "";
                    string incorrectChecked = "";
                    if (aUnitTest.correctFlag == true)
                    {
                        correctChecked = "checked";
                    }
                    else if (aUnitTest.correctFlag == false)
                    {
                        incorrectChecked = "checked";
                    }
                }
                    <td><input type="radio" name="@aSeries.Key-@aUnitTest.number" value="correct" onclick="updateTestResult(this)" @correctChecked /></td>
                    <td><input type="radio" name="@aUnitTest.series-@aUnitTest.number" value="incorrect" onclick="updateTestResult(this)" @incorrectChecked /></td>
                </tr>
            }

        }
        //close the table
        @Html.Raw("</body></table>");
        <span>correct: @correctTests incorrect: @falseTests unknown: @unknownTests</span><br/>
    }
}


